//Packages imported and heloed to understand by ChatGPT
/***************************************************************************************

//Title: Code generated by ChatGPT
//Author: OpenAI
//Date: 12/4/2024
//Code version: ChatGPT (Model 4)
//Availability: https://chat.openai.com/
***************************************************************************************/
import java.math.BigDecimal;
import java.util.Scanner;
import java.util.Date;

//end of ChatGpt Help Section

public class Main {
    public static void main(String[] args) {
        PortfolioManager portfolio = new PortfolioManager();
        Scanner scanner = new Scanner(System.in);
        //condition to end program
        boolean exit = false;
        //"UI" of the program that will run until not specificed 
        while (!exit) {
            System.out.println("\n--- Crypto Portfolio Tracker ---");
            System.out.println("1. Add Asset");
            System.out.println("2. View Portfolio Value");
            System.out.println("3. View Profit/Loss");
            System.out.println("4. View Transaction History");
            System.out.println("5. Exit");
            System.out.print("Select an option: ");

            int choice = scanner.nextInt();
            scanner.nextLine(); // get user answer choice
        //Use the switch function (more efficent than if-else statement)
            switch (choice) {
                //Adding asset + pricea + quantity
                case 1:
                    System.out.print("Enter the CoinGecko ID of the asset (e.g., bitcoin): ");
                    String id = scanner.nextLine().toLowerCase();
            
                    System.out.print("Enter purchase price (USD): ");
                    BigDecimal purchasePrice = scanner.nextBigDecimal();

                    System.out.print("Enter quantity: ");
                    double quantity = scanner.nextDouble();
                    scanner.nextLine(); // Consume newline

                    CryptoAsset asset = new CryptoAsset(id, purchasePrice, quantity);
                    portfolio.addAsset(asset);

                    Transaction txn = new Transaction(id, purchasePrice, quantity, new Date(), "buy");
                    portfolio.addTransaction(txn);

                    System.out.println("Asset added successfully.");
                    break;
                    
                    // View Portfolio Value
                case 2:
                    //get lastest prices to get up to date value
                    portfolio.updatePrices();
                    portfolio.calculateTotalValue();
                    break;

                    // View Profit/Loss
                case 3:
                    //get lastest prices to get up to date value
                    portfolio.updatePrices();
                    portfolio.calculateProfitLoss();
                    break;

                    // View Transaction History
                case 4:
                    portfolio.displayTransactionHistory();
                    break;

                    // Exit
                case 5:
                    exit = true;
                    System.out.println("Exiting Crypto Portfolio Tracker. Goodbye!");
                    break;

                    //Edge case if user doesn't select options 1-5
                default:
                    System.out.println("Invalid option. Please try again.");
            }
        }

        scanner.close();
    }
}
